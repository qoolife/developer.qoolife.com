#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

require 'compass'
Compass.add_project_configuration 'compass.rb'

compile '/static/*/' do
end

compile '/assets/stylesheets/*' do
  ext = item[:extension].split('.').last

  if ext == 'scss'
    filter :sass, Compass.sass_engine_options.merge(syntax: ext.to_sym)
  else
    filter :erb
  end

  filter :rainpress
end

compile '/assets/javascripts/*' do
  filter :erb
  filter :uglify_js
end

compile '*' do
  # item[:extension] returns 'html.erb' for multi-dotted filename
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if ext == 'erb'
    filter :erb
  elsif ext == 'haml' || ext.nil?
    raise 'hey'
    filter :haml
  elsif ext == 'md'
    filter :erb
    filter :kramdown
  elsif ext == 'html'
  else
    raise "Filter is not configured for #{item.identifier} in Rules file."
  end

  layout 'default'
end


route '/static/*' do
  item.identifier[7..-2]
end

route '/assets/stylesheets/*/' do
  item.identifier.chop + '.css'
end

route '/assets/javascripts/*/' do
  item.identifier.chop + '.js'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml

